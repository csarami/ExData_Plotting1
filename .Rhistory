lapply(mat2,1:10)
mat2<- function(size){
mat <- matrix(NA, nrow=size, ncol=size)
#outer(1:nrow(mat), 1:ncol(mat) , FUN="*")
mat<-outer(1:nrow(mat), 1:ncol(mat) , FUN=function(r,c) {z<-ifelse(r<c,r,c); 1/z})
det(mat)
}
lapply(mat2,1:10)
lapply(1:10, FUN = mat2)
as.vector(lapply(1:10, FUN = mat2))
as.vector(lapply(1:10, FUN = mat2))
unlist(lapply(1:10, FUN = mat2))
cat(sprintf(unlist(lapply(1:10, FUN = mat2)))
cat(sprintf(unlist(lapply(1:10, FUN = mat2)))
cat(sprintf(unlist(lapply(1:10, FUN = mat2))))
cat(sprintf(lapply(1:10, FUN = mat2)))
cat(sprintf(%.2f,lapply(1:10, FUN = mat2)))
cat(sprintf(%.2f,lapply(1:10, FUN = mat2)) )
cat(sprintf('%.2f',lapply(1:10, FUN = mat2)) )
cat(sprintf('%.4f',lapply(1:10, FUN = mat2)) )
cat(sprintf('%.9f',lapply(1:10, FUN = mat2)) )
data("iris")
summary(iris)
boxplot(iris$Sepal.Width)
plot.new()
boxplot(iris$Sepal.Width)
mtext('petal width')
col(red)
boxplot(iris$Sepal.Width, col = 'red')
shannon.entropy <- function(p)
{
if (min(p) < 0 || sum(p) <= 0)
return(NA)
p.norm <- p[p>0]/sum(p)
-sum(log2(p.norm)*p.norm)
}
shannon.entropy(8/12)
shannon.entropy(.76)
shannon.entropy(c(12,8))
shannon.entropy(c(2,8))
infoGain <-function( pParentToChildren, breakDowns){
sum(pParentToChildren*shannon.entropy(breakDowns))
}
breakDowns <- list(c(12,8),c(8,2))
breakDowns <- list(c(12,8),c(8,2))
ParentToChildren <- c(20,10)
pPrentToChildren<- ParentToChildren/sum(ParentToChildren)
pParentToChildren
(pParentToChildren<- ParentToChildren/sum(ParentToChildren))
pParentToChildren*shannon.entropy(breakDowns)
c(c(1,2),c(3,4))
vector(c(1,2),c(2,4))
vector(c(1,2),c(2,4), length = 2)
pParentToChildren
shannon.entropy(breakDowns)
lapply(breakDowns,shannon.entropy)
sum(pParentToChildren*lapply(breakDowns,shannon.entropy))
unlist(lapply(breakDowns,shannon.entropy))
sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy)))
(infoGain <-function( pParentToChildren, breakDowns))
lapply(breakDowns,shannon.entropy))
lapply(breakDowns,shannon.entropy)
pParentToChildren*unlist(lapply(breakDowns,shannon.entropy))
infoGain <-function( pParentToChildren, breakDowns){
shannon.entropy(pParentToChildren)- sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy)))
}
function( pParentToChildren, breakDowns)
c
infoGain(c(20,10), list(c(12,8),c(8,2)))
parentToChildren
parentToChildren <- c(20,10)
pParentToChildren<- parentToChildren/sum(parentToChildren)
pParentToChildren
shannon.entropy(pParentToChildren)
shannon.entropy(parentToChildren)
ParentToChildren
pParentToChildren
unlist(lapply(breakDowns,shannon.entropy))
sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy))
)
shannon.entropy(parentToChildren)- sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy)))
options(digits = 3)
shannon.entropy(parentToChildren)- sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy)))
infoGain(c(4,4), list(c(2,2),c(2,2)))
infoGain(c(4,4), list(c(2,2),c(2,2)))
pParentToChildren <-c(4,4)
pPrentToChildren
pParentToChildren<- parentToChildren/sum(parentToChildren)
pPrentToChildren
pParentToChildren <-c(4,4)
pParentToChildren
parentToChildren <-c(4,4)
pParentToChildren<- parentToChildren/sum(parentToChildren)
pParentToChildren
breakDowns <-list(c(2,2),c(2,2))
pParentToChildren*unlist(lapply(breakDowns,shannon.entropy))
shannon.entropy(parentToChildren)
sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy))
)
shannon.entropy(parentToChildren)- sum(pParentToChildren*unlist(lapply(breakDowns,shannon.entropy)))
infoGain(c(4,4), list(c(2,2),c(2,2)))
infoGain <-function( parentBD, childrenBD){ # BD is the breakdown in each class
# inlcude validation test
# 1) size of argument must be the same and all enteries are non-negative integers
# that sum of each element in breakdown is equal to parentTo children and all positive.
pParentToChildren<- parentBD/sum(parentBD)
shannon.entropy(parentToChildren)- sum(pParentToChildren*unlist(lapply(childrenBD,shannon.entropy)))
}
infoGain(c(20,10), list(c(12,8),c(8,2)))
infoGain(c(4,4), list(c(2,2),c(2,2)))
infoGain(c(20,10), list(c(12,8),c(8,2)))
infoGain(c(20,10), list(c(12,8),c(8,2)))
infoGain <-function( parentBD, childrenBD){ # BD is the breakdown in each class
# inlcude validation test
# 1) size of argument must be the same and all enteries are non-negative integers
# that sum of each element in breakdown is equal to parentTo children and all positive.
pParentToChildren<- parentBD/sum(parentBD)
shannon.entropy(parentBD)- sum(pParentToChildren*unlist(lapply(childrenBD,shannon.entropy)))
}
infoGain(c(20,10), list(c(12,8),c(8,2)))
infoGain(c(4,4), list(c(2,2),c(2,2)))
library(nlme)
summary(nlme)
?nlme
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
library(datasets)
data(airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
trellis.par.set()
splom()
par()
print.trellis
print.trellis()
qplot(Wind, Ozone, data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
cls <- c(Date='character', Time ='character'   ,Global_active_power = 'numeric' , Global_reactive_power ='numeric' , Voltage='numeric',Global_intensity='numeric', Sub_metering_1 ='numeric',Sub_metering_2 ='numeric'   ,     Sub_metering_3 = 'numeric'       )
EPC <- read.table("../household_power_consumption.txt", colClasses = cls, header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings = '?')
setwd("~/Documents/FALL 2015/Explanatory Data/Projects/Project 1/ExData_Plotting1")
cls <- c(Date='character', Time ='character'   ,Global_active_power = 'numeric' , Global_reactive_power ='numeric' , Voltage='numeric',Global_intensity='numeric', Sub_metering_1 ='numeric',Sub_metering_2 ='numeric'   ,     Sub_metering_3 = 'numeric'       )
EPC <- read.table("../household_power_consumption.txt", colClasses = cls, header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings = '?')
x <- paste(EPC$Date, EPC$Time)
date1 <- strptime(x,"%d/%m/%Y  %H:%M:%S" )
EPC$Date <-date1
EPC$Time <- as.factor(weekdays(EPC$Date))
DATE1 <- as.Date("2007-02-01 00:00:00", "%Y-%m-%d %H:%M:%S")
DATE2 <- as.Date("2007-02-02 23:59:59", "%Y-%m-%d %H:%M:%S")
DATE2 - DATE1
Test2007 <- subset(EPC, as.Date(date1) >= DATE1 & as.Date(date1) <= DATE2)
attach(Test2007)
dim(Test2007)
plot(ts(EPC$Global_active_power),  xaxt = "n", ylab ="Energy Sub Metering", yaxt = "n", xlab = '', type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'))
legend('topright', lwd = 1, col = c('black', 'red', 'blue'),
lines(ts(Test2007$Sub_metering_2), col = 'red')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
rm(EPC)
rm(EPC)
cls <- c(Date='character', Time ='character'   ,Global_active_power = 'numeric' , Global_reactive_power ='numeric' , Voltage='numeric',Global_intensity='numeric', Sub_metering_1 ='numeric',Sub_metering_2 ='numeric'   ,     Sub_metering_3 = 'numeric'       )
EPC <- read.table("../household_power_consumption.txt", colClasses = cls, header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings = '?')
x <- paste(EPC$Date, EPC$Time)
date1 <- strptime(x,"%d/%m/%Y  %H:%M:%S" )
EPC$Date <-date1
EPC$Time <- as.factor(weekdays(EPC$Date))
DATE1 <- as.Date("2007-02-01 00:00:00", "%Y-%m-%d %H:%M:%S")
DATE2 <- as.Date("2007-02-02 23:59:59", "%Y-%m-%d %H:%M:%S")
DATE2 - DATE1
Test2007 <- subset(EPC, as.Date(date1) >= DATE1 & as.Date(date1) <= DATE2)
dim(Test2007)
epcG<- EPC$Global_active_power
rm(EPC)
length(epcG)
attach(Test2007)
# Now to draw plot two ( this is a time series and one argument is enough)
#yLab= "Global Active Power(killowatts)")
#ylim=c(0,40)
plot(ts(epcG),  xaxt = "n", ylab ="Energy Sub Metering", yaxt = "n", xlab = '', type = 'n')
lines(ts(Test2007$Sub_metering_1))
plot(ts(epcG), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", , type = 'n')
lines(ts(Test2007$Sub_metering_1))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", , type = 'n')
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = 1, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'))
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
dev.copy(png, file = 'plot3.png', width = 480, height = 480)
dev.off()
legend('topright', lwd = .2, col = c('black', 'red', 'blue'),
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .2, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'))
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.75)
legend('topright', lwd = .2, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.75)
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .2, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.75)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.75)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
dev.copy(png, file = 'plot3.png', width = 480, height = 480)
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n")
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering")
par(mfrow = c(2,2))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
plot(ts(Test2007$Sub_metering_1), xlab = 'datetime', ylab = 'Voltage')
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
par(mfrow = c(2,2))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Test2007$Global_reactive_power), xaxt = 'n')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
par(mfrow = c(2,2))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
par(mfrow = c(2,2))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
par(mfrow = c(2,2))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
margin.table()
par$mar
par(margin.table())
?par
par(mfrow = c(2,2), oma = c(0,0,2,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
par(mfrow = c(2,2), oma = c(0,0,2,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
par(mfrow = c(2,2), oma = c(0,0,2,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
par(mfrow = c(2,2), oma = c(0,0,0,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
par(mfrow = c(2,2), mar = c(4,4,2,1) , oma = c(0,0,2,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power), xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
plot(ts(Global_reactive_power),xlab = 'datetime', xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
par(mfrow = c(2,2), mar = c(4,4,2,1) , oma = c(0,0,2,0))
# first plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Global Active Power")
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
#second plot
plot(ts(Test2007$Voltage), xlab = 'datetime', ylab = 'Voltage', xaxt = 'n')
axis(1, at = c(0, 1440,2880), labels = c('Tue','Fri', 'Sat'))
# third plot
plot(ts(Test2007$Global_active_power), xlab = '', xaxt = "n", ylab ="Energy Sub Metering", ylim=c(0,40), yaxt = "n", type = 'n')
lines(ts(Test2007$Sub_metering_1))
lines(ts(Test2007$Sub_metering_2), col = 'red')
lines(ts(Test2007$Sub_metering_3), col = 'blue')
legend('topright', lwd = .75, col = c('black', 'red', 'blue'),
legend =c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),cex = 0.6)
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at=c(0, 10, 20,30))
#forth plot
plot(ts(Global_reactive_power),xlab = 'datetime', xaxt = 'n', yaxt = 'n', ylab= 'Global_reactive_power')
axis(1, at=c(0, 1440, 2880), labels=c("Thu", "Fri", "Sat"))
axis(2, at= seq(0:0.5, by = .1))
dev.copy(png, file = 'plot4.png', width = 480, height = 480)
dev.off()
x <- paste(EPC$Date, EPC$Time)
date1 <- strptime(x,"%d/%m/%Y  %H:%M:%S" )
EPC$Date <-date1
EPC$Time <- as.factor(weekdays(EPC$Date))
DATE1 <- as.Date("2007-02-01 00:00:00", "%Y-%m-%d %H:%M:%S")
DATE2 <- as.Date("2007-02-02 23:59:59", "%Y-%m-%d %H:%M:%S")
DATE2 - DATE1
Test2007 <- subset(EPC, as.Date(date1) >= DATE1 & as.Date(date1) <= DATE2)
rm(EPC)
hist(Global_active_power, main ='Global Active Power', xlab = "Global Active Power (killowatts)", ylab = 'Frequency', col = 'red')
dev.off()
dev.copy(png, file = 'plot1.png', width = 480, height = 480)
attach(Test2007)
dim(Test2007)
hist(Global_active_power, main ='Global Active Power', xlab = "Global Active Power (killowatts)", ylab = 'Frequency', col = 'red')
dev.copy(png, file = 'plot1.png', width = 480, height = 480)
dev.off()
dev.off()
hist(Global_active_power, main ='Global Active Power', xlab = "Global Active Power (killowatts)", ylab = 'Frequency', col = 'red')
dev.copy(png, file = 'plot1.png', width = 480, height = 480)
dev.off()
dev.new()
hist(Global_active_power, main ='Global Active Power', xlab = "Global Active Power (killowatts)", ylab = 'Frequency', col = 'red')
dev.copy(png, file = 'plot1.png', width = 480, height = 480)
dev.off()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
R.version.string
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
plot.new()
par(mar = rep(2, 4))
plot.new()
swirl()
plot.new()
par(mar = rep(2, 4))
plot.new()
swirl()
plot.new()
plot.new()
par(mar = rep(1, 4))
plot.new()
swirl()
